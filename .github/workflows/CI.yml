name: Rust

on:
  push:
  pull_request:
    branches: [main, dev]

env:
  CARGO_TERM_COLOR: always


jobs:
  build:
    strategy:
      matrix:
        os: [windows-2019, ubuntu-latest]
        toolchain: [nightly, beta]
    runs-on: ${{ matrix.os }}
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Use Rust Cache
        if: ${{ runner.os == 'Linux' }}
        uses: Swatinem/rust-cache@v2.0.1

      - name: Run cargo check --all-targets w/ -D warnings
        run: cargo check --all-targets
        env:
          RUSTFLAGS: "-D warnings"

      - name: Run cargo test w/ -D warnings
        if: ${{ runner.os == 'Linux' }}
        run: cargo test -- --test-threads=1
        env:
          RUSTFLAGS: "-D warnings"
      - name: Run cargo doc
        if: ${{ runner.os == 'Linux' }}
        run: cargo doc --no-deps --document-private-items --all-features

      - name: Run build --release
        run: cargo build --release

  rustfmt:
    runs-on: ubuntu-20.04
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Get nightly Rust toolchain with rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt

      - name: Run cargo fmt --all -- --check
        run: cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-20.04
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Get nightly Rust toolchain with clippy
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: clippy
      - name: Run cargo clippy --package plantbuddyclient --all-targets
        run: cargo clippy --package plantbuddyclient --all-targets #-- -D warnings
